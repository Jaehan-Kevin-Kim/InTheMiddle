{"ast":null,"code":"var _jsxFileName = \"F:\\\\Self Study_Coding\\\\Web\\\\Portfolio\\\\TeamProject\\\\in_the_middle\\\\src\\\\components\\\\uploadItem\\\\ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { db, storage } from \"../../firebase\";\nimport firebase from \"firebase\";\nimport \"./imageUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageUpload = ({\n  onClick\n}) => {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [caption, setCaption] = useState(\"\"); //   const [url, setUrl] = useState('');\n\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\", snapshot => {\n      //progress fuction ...\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      //error fuction ...\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      //complete fuction ...\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        /*#__PURE__*/\n        _jsxDEV(\"imageUploadFunction\", {\n          url: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this); //post image inside db\n        // db.collection(\"items\").add({\n        //   timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        //   caption: caption,\n        //   imageUrl: url,\n        //   // username: username,\n        // });\n\n\n        setProgress(0);\n        setCaption(\"\");\n        setImage(null);\n      });\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // <>\n    //   <h3>Image Upload</h3>\n    //   <input type='file' onChange={handleChange} />\n    //   <button onClick={handleUpload}>Upload</button>\n    // </>\n    _jsxDEV(\"div\", {\n      className: \"imageUpload\",\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        className: \"imageUploadProgress\",\n        value: progress,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"File\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(ImageUpload, \"JRLwCTLzR8AIPTJhVQNfMUW84YM=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/TeamProject/in_the_middle/src/components/uploadItem/ImageUpload.js"],"names":["React","useState","db","storage","firebase","ImageUpload","onClick","image","setImage","caption","setCaption","progress","setProgress","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,gBAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC,CAFmC,CAGnC;;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACrBR,MAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAGf,OAAO,CAACgB,GAAR,CAAa,UAASZ,KAAK,CAACa,IAAK,EAAjC,EAAoCC,GAApC,CAAwCd,KAAxC,CAAnB;AACAW,IAAAA,UAAU,CAACI,EAAX,CACE,eADF,EAEGC,QAAD,IAAc;AACZ;AACA,YAAMZ,QAAQ,GAAGa,IAAI,CAACC,KAAL,CAAYF,QAAQ,CAACG,gBAAT,GAA4BH,QAAQ,CAACI,UAAtC,GAAoD,GAA/D,CAAjB;AACAf,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KANH,EAOGiB,KAAD,IAAW;AACT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,MAAAA,KAAK,CAACH,KAAK,CAACI,OAAP,CAAL;AACD,KAXH,EAYE,MAAM;AACJ;AACA7B,MAAAA,OAAO,CACJgB,GADH,CACO,QADP,EAEGc,KAFH,CAES1B,KAAK,CAACa,IAFf,EAGGc,cAHH,GAIGC,IAJH,CAISC,GAAD,IAAS;AACb;AAAA;AAAqB,UAAA,GAAG,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA,iBADa,CAEb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAxB,QAAAA,WAAW,CAAC,CAAD,CAAX;AACAF,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAjBH;AAkBD,KAhCH;AAkCD,GApCD;;AAqCA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BAKE;AAAU,QAAA,SAAS,EAAC,qBAApB;AAA0C,QAAA,KAAK,EAAEG,QAAjD;AAA2D,QAAA,GAAG,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,cALF,eAYE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAQ,QAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAsBD,CAvED;;GAAMZ,W;;KAAAA,W;AAyEN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { db, storage } from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport \"./imageUpload.css\";\r\n\r\nconst ImageUpload = ({ onClick }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [caption, setCaption] = useState(\"\");\r\n  //   const [url, setUrl] = useState('');\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        //progress fuction ...\r\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        //error fuction ...\r\n        console.log(error);\r\n        alert(error.message);\r\n      },\r\n      () => {\r\n        //complete fuction ...\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            <imageUploadFunction url={url} />;\r\n            //post image inside db\r\n            // db.collection(\"items\").add({\r\n            //   timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            //   caption: caption,\r\n            //   imageUrl: url,\r\n            //   // username: username,\r\n            // });\r\n\r\n            setProgress(0);\r\n            setCaption(\"\");\r\n            setImage(null);\r\n          });\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    // <>\r\n    //   <h3>Image Upload</h3>\r\n    //   <input type='file' onChange={handleChange} />\r\n    //   <button onClick={handleUpload}>Upload</button>\r\n    // </>\r\n    <div className='imageUpload'>\r\n      {/* I want to have.... */}\r\n      {/* Caption input */}\r\n      {/* File picker */}\r\n      {/* Post button */}\r\n      <progress className='imageUploadProgress' value={progress} max='100' />\r\n      {/* <input\r\n        type='text'\r\n        placeholder='Enter a caption...'\r\n        value={caption}\r\n        onChange={(event) => setCaption(event.target.value)}\r\n      /> */}\r\n      <input type='File' onChange={handleChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"]},"metadata":{},"sourceType":"module"}