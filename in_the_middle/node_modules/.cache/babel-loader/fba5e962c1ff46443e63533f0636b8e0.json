{"ast":null,"code":"var _jsxFileName = \"F:\\\\Self Study_Coding\\\\Web\\\\Portfolio\\\\TeamProject\\\\in_the_middle\\\\src\\\\feed\\\\Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header/Header\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport \"./Feed.css\";\nimport FeedInputOption from \"./FeedInputOption\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport Post from \"./Post\";\nimport firebase from \"firebase\";\nimport { db } from \"../firebase\";\nimport { Avatar } from \"@material-ui/core\"; // import { useSelector } from \"react-redux\";\n// import { selectUser } from \"./features/userSlice\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Feed({\n  userId,\n  user\n}) {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [email, setEmail] = useState(); // const user = useSelector(selectUser);\n  // console.log(user);\n\n  console.log(userId);\n  console.log(user); // const displayName = user.displayName;\n\n  useEffect(() => {\n    db.collection(\"newPosts\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })));\n    });\n  }, []);\n  useEffect(() => {\n    setEmail(user.displayName);\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    db.collection(\"newPosts\").add({\n      email: user.displayName,\n      // description: user.email,\n      // postId:\n      message: input,\n      photoUrl: user.photoUrl || \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__top\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          children: [email && email.split(\"\")[0], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(CreateIcon, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: onSubmit,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(FeedInputOption, {\n            Icon: ImageIcon,\n            name: \"Photo\",\n            color: \"#70B5F9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FeedInputOption, {\n          Icon: SubscriptionsIcon,\n          name: \"Video\",\n          color: \"#E7A33E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FeedInputOption, {\n          Icon: EventNoteIcon,\n          name: \"Event\",\n          color: \"#C0CBCD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FeedInputOption, {\n          Icon: CalendarViewDayIcon,\n          name: \"Write article\",\n          color: \"#7FC15E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), posts.map(({\n      id,\n      data: {\n        description,\n        message,\n        email,\n        photoUrl,\n        timestamp\n      }\n    }) => /*#__PURE__*/_jsxDEV(Post, {\n      // postId={id}\n      description: description,\n      message: message,\n      name: email,\n      photoUrl: photoUrl,\n      timestamp: timestamp,\n      user: user\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Feed, \"0H6WqRNu06BLddZ1DNzmrT8XCFY=\");\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/TeamProject/in_the_middle/src/feed/Feed.js"],"names":["React","useEffect","useState","Header","CreateIcon","FeedInputOption","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Post","firebase","db","Avatar","Feed","userId","user","input","setInput","posts","setPosts","email","setEmail","console","log","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","displayName","onSubmit","e","preventDefault","add","message","photoUrl","timestamp","firestore","FieldValue","serverTimestamp","split","target","value","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../components/header/Header\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport \"./Feed.css\";\r\nimport FeedInputOption from \"./FeedInputOption\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\r\nimport Post from \"./Post\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { selectUser } from \"./features/userSlice\";\r\n\r\nfunction Feed({ userId, user }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [email, setEmail] = useState();\r\n  // const user = useSelector(selectUser);\r\n  // console.log(user);\r\n  console.log(userId);\r\n\r\n  console.log(user);\r\n  // const displayName = user.displayName;\r\n\r\n  useEffect(() => {\r\n    db.collection(\"newPosts\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setEmail(user.displayName);\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"newPosts\").add({\r\n      email: user.displayName,\r\n      // description: user.email,\r\n      // postId:\r\n      message: input,\r\n      photoUrl: user.photoUrl || \"\",\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='feed__container'>\r\n        <div className='feed__top'>\r\n          <Avatar>{email && email.split(\"\")[0]} </Avatar>\r\n          <form onSubmit={onSubmit}>\r\n            <CreateIcon className='icon' />\r\n            <input type='text' value={input} onChange={(e) => setInput(e.target.value)} />\r\n            <button type='submit' onClick={onSubmit}>\r\n              send\r\n            </button>{\" \"}\r\n          </form>\r\n        </div>\r\n        <div className='feed__bottom'>\r\n          <div className=''>\r\n            <FeedInputOption Icon={ImageIcon} name='Photo' color='#70B5F9' />\r\n          </div>\r\n          <FeedInputOption Icon={SubscriptionsIcon} name='Video' color='#E7A33E' />\r\n          <FeedInputOption Icon={EventNoteIcon} name='Event' color='#C0CBCD' />\r\n          <FeedInputOption Icon={CalendarViewDayIcon} name='Write article' color='#7FC15E' />\r\n        </div>\r\n      </div>\r\n      {posts.map(({ id, data: { description, message, email, photoUrl, timestamp } }) => (\r\n        <Post\r\n          key={id}\r\n          // postId={id}\r\n          description={description}\r\n          message={message}\r\n          name={email}\r\n          photoUrl={photoUrl}\r\n          timestamp={timestamp}\r\n          user={user}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n"]},"metadata":{},"sourceType":"module"}