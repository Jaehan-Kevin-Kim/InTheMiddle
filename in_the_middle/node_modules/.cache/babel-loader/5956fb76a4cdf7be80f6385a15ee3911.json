{"ast":null,"code":"var _jsxFileName = \"F:\\\\Self Study_Coding\\\\Web\\\\Portfolio\\\\TeamProject\\\\in_the_middle\\\\src\\\\feed\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { db } from \"../firebase\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comments = ({\n  user,\n  postId\n}) => {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [input, setInput] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  console.log(user);\n  console.log(postId);\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection(\"newPosts\").doc(postId).collection(\"comments\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(input);\n    db.collection(\"newPosts\").doc(postId).collection(\"comments\").add({\n      email: user.displayName,\n      // description: user.email,\n      message: input,\n      photoUrl: user.photoUrl || \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n  }; //   const postComment = (event) => {\n  //     event.preventDefault();\n  //     db.collection(\"newPosts\").doc(postId).collection(\"comments\").add({\n  //       text: comment,\n  //       username: user.displayName,\n  //       timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n  //     });\n  //     setComment(\"\");\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments__container\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        children: [email && email.split(\"\")[0], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(CreateIcon, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: onSubmit,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Comments, \"e3raHNH9GKqNtnm85oD1VenT/Vo=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/TeamProject/in_the_middle/src/feed/Comments.js"],"names":["React","useState","useEffect","Avatar","CreateIcon","db","firebase","Comments","user","postId","email","setEmail","input","setInput","comments","setComments","comment","setComment","console","log","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","onSubmit","e","preventDefault","add","displayName","message","photoUrl","timestamp","firestore","FieldValue","serverTimestamp","split","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Comments = ({ user, postId }) => {\r\n  const [email, setEmail] = useState();\r\n  const [input, setInput] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  console.log(user);\r\n  console.log(postId);\r\n\r\n  useEffect(() => {\r\n    let unsubscribe;\r\n    if (postId) {\r\n      unsubscribe = db\r\n        .collection(\"newPosts\")\r\n        .doc(postId)\r\n        .collection(\"comments\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          setComments(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [postId]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(input);\r\n    db.collection(\"newPosts\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .add({\r\n        email: user.displayName,\r\n        // description: user.email,\r\n        message: input,\r\n        photoUrl: user.photoUrl || \"\",\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n  };\r\n\r\n  //   const postComment = (event) => {\r\n  //     event.preventDefault();\r\n\r\n  //     db.collection(\"newPosts\").doc(postId).collection(\"comments\").add({\r\n  //       text: comment,\r\n  //       username: user.displayName,\r\n  //       timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n  //     });\r\n  //     setComment(\"\");\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <div className='comments__container'>\r\n        <Avatar>{email && email.split(\"\")[0]} </Avatar>\r\n        <form onSubmit={onSubmit}>\r\n          <CreateIcon className='icon' />\r\n          <input type='text' value={input} onChange={(e) => setInput(e.target.value)} />\r\n          <button type='submit' onClick={onSubmit}>\r\n            send\r\n          </button>{\" \"}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}