{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header/Header\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport \"./Feed.css\";\nimport FeedInputOption from \"./FeedInputOption\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport Post from \"./Post\";\nimport firebase from \"firebase\";\nimport { db } from \"../firebase\"; // import { useSelector } from \"react-redux\";\n// import { selectUser } from \"./features/userSlice\";\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Feed({\n  userId,\n  userEmail\n}) {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [posts, setPosts] = useState([]); // const user = useSelector(selectUser);\n  // console.log(user);\n\n  console.log(userId);\n  console.log(userEmail);\n  useEffect(() => {\n    db.collection(\"newPosts\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })));\n    });\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    db.collection(\"newPosts\").add({\n      email: user.displayName,\n      description: user.email,\n      message: input,\n      photoUrl: user.photoUrl || \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Feed, \"QFQePrPuXl77Bxpl+qpv/wZ8F1A=\");\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/TeamProject/in_the_middle/src/feed/Feed.js"],"names":["React","useEffect","useState","Header","CreateIcon","FeedInputOption","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Post","firebase","db","Feed","userId","userEmail","input","setInput","posts","setPosts","console","log","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","onSubmit","e","preventDefault","add","email","user","displayName","description","message","photoUrl","timestamp","firestore","FieldValue","serverTimestamp"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,YAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,EAAT,QAAmB,aAAnB,C,CACA;AACA;;;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAd,EAAqC;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC,CAFmC,CAGnC;AACA;;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,EAAE,CAACU,UAAH,CAAc,UAAd,EACGC,OADH,CACW,WADX,EACwB,MADxB,EAEGC,UAFH,CAEeC,QAAD,IAAc;AACxBN,MAAAA,QAAQ,CACNM,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC1BC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADkB;AAE1BC,QAAAA,IAAI,EAAEF,GAAG,CAACE,IAAJ;AAFoB,OAAV,CAAlB,CADM,CAAR;AAMD,KATH;AAUD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACArB,IAAAA,EAAE,CAACU,UAAH,CAAc,UAAd,EAA0BY,GAA1B,CAA8B;AAC5BC,MAAAA,KAAK,EAAEC,IAAI,CAACC,WADgB;AAE5BC,MAAAA,WAAW,EAAEF,IAAI,CAACD,KAFU;AAG5BI,MAAAA,OAAO,EAAEvB,KAHmB;AAI5BwB,MAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAAL,IAAiB,EAJC;AAK5BC,MAAAA,SAAS,EAAE9B,QAAQ,CAAC+B,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AALiB,KAA9B;AAQA3B,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAXD;;AAYA,sBACE,qCADF;AAmCD;;GApEQJ,I;;KAAAA,I;AAsET,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../components/header/Header\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport \"./Feed.css\";\r\nimport FeedInputOption from \"./FeedInputOption\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\r\nimport Post from \"./Post\";\r\nimport firebase from \"firebase\";\r\nimport { db } from \"../firebase\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { selectUser } from \"./features/userSlice\";\r\n\r\nfunction Feed({ userId, userEmail }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  // const user = useSelector(selectUser);\r\n  // console.log(user);\r\n  console.log(userId);\r\n  console.log(userEmail);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"newPosts\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"newPosts\").add({\r\n      email: user.displayName,\r\n      description: user.email,\r\n      message: input,\r\n      photoUrl: user.photoUrl || \"\",\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      {/* //     <Header />\r\n  //     <div className='feed__container'>\r\n  //       <div className='feed__top'>\r\n  //         <form onSubmit={onSubmit}>\r\n  //           <CreateIcon className='icon' />\r\n  //           <input type='text' value={input} onChange={(e) => setInput(e.target.value)} />\r\n  //           {/* <button type='submit' onClick={onSubmit}>\r\n  //             send\r\n  //           </button> *\r\n  //         </form>\r\n  //       </div>\r\n  //       <div className='feed__bottom'>\r\n  //         <div className=''>\r\n  //           <FeedInputOption Icon={ImageIcon} name='Photo' color='#70B5F9' />\r\n  //         </div>\r\n  //         <FeedInputOption Icon={SubscriptionsIcon} name='Video' color='#E7A33E' />\r\n  //         <FeedInputOption Icon={EventNoteIcon} name='Event' color='#C0CBCD' />\r\n  //         <FeedInputOption Icon={CalendarViewDayIcon} name='Write article' color='#7FC15E' />\r\n  //       </div>\r\n  //     </div>\r\n  //     {posts.map(({ id, data: { description, message, name, photoUrl, timestamp } }) => ( \r\n  //       <Post\r\n  //         key={id}\r\n  //         description={description}\r\n  //         message={message}\r\n  //         name={name}\r\n  //         photoUrl={photoUrl}\r\n  //         timestamp={timestamp}\r\n  //       />\r\n  //     ))}\r\n  */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n"]},"metadata":{},"sourceType":"module"}