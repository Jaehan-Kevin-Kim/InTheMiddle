{"ast":null,"code":"import _regeneratorRuntime from\"F:/Self Study_Coding/Web/Portfolio/TeamProject/in_the_middle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"F:/Self Study_Coding/Web/Portfolio/TeamProject/in_the_middle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"F:/Self Study_Coding/Web/Portfolio/TeamProject/in_the_middle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import\"./Login.css\";import{db,auth}from\"../../firebase\";import firebase from\"firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),user=_useState6[0],setUser=_useState6[1];useEffect(function(){var unsubscriobe=auth.onAuthStateChanged(function(authUser){if(authUser){//user login\nsetUser(authUser);}else{//user log out\nsetUser(null);}});return function(){//perform some cleanup action\nunsubscriobe();};},[user]);console.log(user);// useEffect(() => {\n//   db.collection\n// })\nvar onSocialClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var name,provider,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:name=event.target.name;if(name===\"google\"){provider=new firebase.auth.GoogleAuthProvider();}else if(name===\"github\"){provider=new firebase.auth.GithubAuthProvider();}_context.next=4;return auth.signInWithPopup(provider);case 4:data=_context.sent;console.log(data);case 6:case\"end\":return _context.stop();}}},_callee);}));return function onSocialClick(_x){return _ref.apply(this,arguments);};}();var signUp=function signUp(event){event.preventDefault();auth.createUserWithEmailAndPassword(email,password).then(function(authUser){//update user\nreturn authUser.user.updateProfile({displayName:email});}).catch(function(error){return alert(error.message);});};var login=function login(event){event.preventDefault();var data=auth.signInWithEmailAndPassword(email,password).catch(function(error){return alert(error.message);});console.log(data);};return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"loginWithEmail\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,placeholder:\"Email\",onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,placeholder:\"Password\",onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:login,children:\"Login\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"authBtns\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:onSocialClick,name:\"google\",className:\"authBtn\",children:\"Continue with Google\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onSocialClick,name:\"github\",className:\"authBtn\",children:\"Continue with Github\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"signUp\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,placeholder:\"Email\",onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:function onChange(e){return setPassword(e.target.value);},value:password,placeholder:\"Password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:signUp,children:\"sign up\"})]})]});};export default Login;","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/TeamProject/in_the_middle/src/components/login/Login.js"],"names":["React","useEffect","useState","db","auth","firebase","Login","email","setEmail","password","setPassword","user","setUser","unsubscriobe","onAuthStateChanged","authUser","console","log","onSocialClick","event","name","target","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","signUp","preventDefault","createUserWithEmailAndPassword","then","updateProfile","displayName","catch","error","alert","message","login","signInWithEmailAndPassword","e","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { db, auth } from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscriobe = auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        //user login\r\n        setUser(authUser);\r\n      } else {\r\n        //user log out\r\n        setUser(null);\r\n      }\r\n    });\r\n    return () => {\r\n      //perform some cleanup action\r\n      unsubscriobe();\r\n    };\r\n  }, [user]);\r\n  console.log(user);\r\n\r\n  // useEffect(() => {\r\n  //   db.collection\r\n  // })\r\n\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebase.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebase.auth.GithubAuthProvider();\r\n    }\r\n    const data = await auth.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  const signUp = (event) => {\r\n    event.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        //update user\r\n        return authUser.user.updateProfile({\r\n          displayName: email,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const login = (event) => {\r\n    event.preventDefault();\r\n\r\n    const data = auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error.message));\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className='login'>\r\n      <div className='loginWithEmail'>\r\n        <input\r\n          type='email'\r\n          value={email}\r\n          placeholder='Email'\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          placeholder='Password'\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type='submit' onClick={login}>\r\n          Login\r\n        </button>\r\n      </div>\r\n      <div className='authBtns'>\r\n        <button onClick={onSocialClick} name='google' className='authBtn'>\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name='github' className='authBtn'>\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n      <div className='signUp'>\r\n        <input\r\n          type='email'\r\n          value={email}\r\n          placeholder='Email'\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type='password'\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n          placeholder='Password'\r\n        />\r\n        <button type='submit' onClick={signUp}>\r\n          sign up\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}